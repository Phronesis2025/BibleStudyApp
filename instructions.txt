# Bible Study App Design Specification

## Dark Mode Design
- Background: Dark gradient from gray-800 to blue-900 with subtle organic shapes in sky-400/10 for an uplifting feel
- Text: White and gray-400 for secondary text
- Accents: Sky-400 for interactive elements
- Typography: Headings in Poppins font (medium weight) for a friendlier tone, text-gray-50 for headings, text-gray-200 for body text
- Cards: Semi-transparent dark backgrounds with subtle borders
- Hover states: Subtle lightening of backgrounds
- Focus states: Sky-400 outline
- Loading states: Sky-400 spinners
- Error states: Red-400 text
- Success states: Green-400 text

## Layout Structure
- Header: Fixed position with dark background
- Main content: Centered with max-width-7xl
- Sidebar: Fixed position on desktop, bottom on mobile
- Cards: Consistent padding and border radius
- Forms: Dark backgrounds with light text
- Buttons: Sky-400 with hover states
- Links: Sky-400 with underline on hover

## Homepage (`app/page.tsx`)
- **Purpose:** Entry point for users to create or select a user profile.
- **Layout:** Single column with responsive sections.
- **Sections:**
  - Enhanced hero section with gradient title, clear and concise tagline, subtle background image with parallax effect, organic shapes, and a bold title with subtle glow and dynamic animation
  - "Start your Journey" button in hero section smoothly scrolls to the "Begin your Journey" section using JavaScript (`window.scrollTo` with 64px offset for fixed navigation), ensuring mobile-first UX and compatibility.
  - "Begin your Journey" card redesigned with a gradient background (from-sky-800 to-blue-900) and BookOpenIcon, vertically stacked Sign Up with Email and Sign In buttons, mobile-first layout (image top, content bottom), subtle background zoom on desktop, and Dribbble-inspired styling.
  - Navigation bar made sticky with reduced mobile height (h-14) and right-aligned Sign Up and Sign In buttons that open signup/signin modal.
  - Fixed Sign Up/Sign In modal layout: Moved Login and Google buttons inside the modal card for a cohesive design.
  - Reduced Sign Up/Sign In modal height: Adjusted padding, field sizes, font sizes, and spacing to fit within the viewport.
  - Adjusted Sign Up/Sign In modal: Reduced mobile width (max-w-sm), further reduced sizes on desktop to remove scrollbar, and horizontally aligned Login/Google buttons in a flex container for better space efficiency.
  - Updated Sign Up/Sign In modal input fields: Changed text color to black (text-black) with a lighter background (bg-gray-200) for better contrast while maintaining the dark modal theme (bg-gray-900), and improved placeholder visibility (placeholder-gray-500).
  - Enhanced Sign Up/Sign In modal appearance: Updated the modal card with a lighter semi-transparent background (bg-gray-800/90), backdrop blur effect, stronger border (border-2 border-sky-400/50), and shadow (shadow-lg) to improve contrast against the dark page background.
  - Introduction section with app description and 3 feature cards
  - "Verse of the Day" section with a dynamically changing verse, sample verse, and "Read More" button that opens a modal with a preview
  - Call-to-action section with form for creating/selecting users
  - Footer with copyright and version number
- **Components:**
  - User creation form with validation
  - User selection dropdown
  - Feature cards with icons
  - Gradient buttons with hover effects
  - Organic shapes in the hero section for a softer, more inviting look
  - CTA button in hero section to navigate to the Get Started section
  - Mobile-friendly card interactions with ripple effect and animations
  - Optimized Sign Up/Sign In modal with space-efficient design that adapts to different devices

## Reading Page (`app/reading/page.tsx`)
- **Purpose:** Display Bible verses with commentary and reflection tools.
- **Layout:** Two-column on desktop, single column on mobile.
- **Main Content:**
  - Navigation bar made sticky with reduced mobile height (h-14), with right-aligned Profile and Sign Out links; Sign Out redirects to Homepage.
  - Fixed navigation bar to show Profile/Sign Out links, added padding to prevent content overlap with sticky header.
  - Styled Profile and Sign Out buttons in header to match Sign Up and Sign In buttons on Homepage (gradient and bordered styles).
  - Verse input form with dark mode styling
  - Skeleton UI during commentary loading
  - Commentary section with:
    - Titles inside each card with consistent styling (text-2xl font-semibold with border underline)
    - Order of sections: Commentary, Historical Context, Reading it Right, Applying This Verse, Denominational Perspectives, Reflection Question
    - General meaning of the verse (1-2 sentences) in the Commentary card
    - Key themes displayed at top with a nested structure for proper horizontal alignment (no wrapping) in the Commentary card
    - "Reading it Right" section with Summary, Expose, Change, and Prepare subsections
    - "Applying This Verse in Today's World" as a separate card
    - "Denominational Perspectives" with a subheader explaining different viewpoints
  - Reflection form with question and answer fields (minimum 10 characters required)
  - Share button with success/error states
  - Save button disabled until answer meets minimum length requirement
- **Sidebar:** Display shared reflections with theme tags, verse references, and likes.
  - Always shows exactly 3 theme tags per reflection for consistency
  - Shows reflections from all users within the last 30 days
  - Theme tags use color-coded background and icons based on theme type
  - Like functionality with red heart icon for liked items

## Profile Page (`app/profile/page.tsx`)
- **Purpose:** Display user details, saved readings, and reflections.
- **Layout:** Single column with responsive cards.
- **Sections:**
  - Navigation header with "Back to Reading" link for easy navigation
  - Profile info card with user name and email
  - Name editing functionality with inline form
  - User Activity Statistics (total readings, reflections, shared reflections, total likes)
  - Favorite Themes section to show the user's most common themes
  - Saved readings section listing user's reading history
  - Reflections section showing detailed view of the user's reflections
  - Most Popular Shared Reflections subsection to highlight top shared reflections by likes
- **Features:**
  - Session validation ensures only authenticated users can access the page
  - Real-time name updates using Supabase
  - Success/error message handling
  - Loading state with spinner during data fetching
  - Consistent styling with the app's design (gradient background, sky-400 accents)
  - Mobile responsive layout with proper spacing and stacking
  - Interactive ThemeChip components showing user's top themes
  - Statistics in a responsive grid that adapts to mobile viewing
- **Components:**
  - Inline name edit form with Save and Cancel buttons
  - Reading and reflection cards with hover effects
  - Success/error message component with appropriate styling
  - Loading spinner for asynchronous operations
  - Theme visualization using the same ThemeChip component from the Reading Page
  - Activity statistics with icon and number display

## API Routes

### `/api/verse`
- **Purpose:** Fetch Bible verses from ESV API.
- **Request:** POST with body containing `verse` (string).
- **Response:** JSON object with keys: `passages` (array of verse texts), `query` (original query).

### `/api/commentary`
- **Purpose:** Generate AI commentary on Bible verses.
- **Request:** POST with body containing `verse` (string), `content` (string).
- **Response:** JSON object with keys:
  - `historical_context` (string)
  - `general_meaning` (string) - 1-2 sentences explaining the verse's meaning in simple terms
  - `commentary` (object with summarize, expose, change, prepare)
  - `application` (string)
  - `denominational_perspectives` (object with protestant, baptist, catholic)
  - `themes` (array of exactly 3 theme strings selected for their relevance to the verse)
  - `reflective_question` (string) - A short, thought-provoking question for personal application
- **Theme Restriction:** Only returns themes from the pre-defined list: faith, love, hope, grace, mercy, peace, wisdom, truth, salvation, righteousness, joy, forgiveness, obedience, humility, trust, prayer, service, holiness, redemption, eternity, teaching, accountability.
- **Theme Processing:** 
  - Enhanced OpenAI prompt strictly enforces theme selection from the pre-defined list
  - Improved theme mapping logic to avoid duplicates and select more relevant alternatives
  - Alternative theme mappings prioritize contextually appropriate themes (e.g., strength â†’ wisdom rather than hope)
  - Ensures exactly 3 unique and relevant themes are returned, even if OpenAI returns duplicates or non-allowed themes

### `/api/like`
- **Purpose:** Like or unlike a reflection.
- **Request:** POST with body containing userId, reflectionId, like (boolean, true to like, false to unlike).
- **Response:** JSON object with keys: success (boolean), likes (updated number of likes), likedBy (array of user IDs who liked the reflection).
- **Processing:** 
  - Updates the likes count based on the user's action (increment when liking, decrement when unliking)
  - Manages the liked_by array to track which users have liked each reflection
  - Returns the updated likes count and liked_by array in the response

## Database Schema

### `reflections` table
- `id` (uuid, primary key)
- `user_id` (uuid, foreign key)
- `verse` (text)
- `verse_text` (text)
- `question` (text)
- `answer` (text)
- `insight` (text)
- `themes` (text[]) - Always contains exactly 3 themes from the pre-defined list
- `likes` (integer, default 0)
- `liked_by` (text[]) - Array of user IDs who liked the reflection
- `created_at` (timestamp)

### `reading_log` table
- `id` (uuid, primary key)
- `user_id` (uuid, foreign key)
- `verse` (text)
- `created_at` (timestamp)

### `users` table
- `id` (uuid, primary key)
- `name` (text)
- `created_at` (timestamp)

## Theme Configuration
Each theme has:
- Background color (with 20% opacity)
- Text color
- Icon name

Themes:
1. faith: blue-600/20, text-blue-400, CrossIcon
2. love: pink-600/20, text-pink-400, HeartIcon
3. hope: green-600/20, text-green-400, SunIcon
4. grace: purple-600/20, text-purple-400, GiftIcon
5. mercy: pink-600/20, text-pink-400, HandRaisedIcon
6. peace: green-600/20, text-green-400, DoveIcon
7. wisdom: indigo-600/20, text-indigo-400, LightBulbIcon
8. truth: teal-600/20, text-teal-400, CheckCircleIcon
9. salvation: orange-600/20, text-orange-400, ShieldCheckIcon
10. righteousness: amber-600/20, text-amber-400, ScaleIcon
11. joy: yellow-600/20, text-yellow-400, SparklesIcon
12. forgiveness: pink-600/20, text-pink-400, HeartshakeIcon
13. obedience: blue-600/20, text-blue-400, CheckIcon
14. humility: indigo-600/20, text-indigo-400, ArrowDownIcon
15. trust: teal-600/20, text-teal-400, LockClosedIcon
16. prayer: purple-600/20, text-purple-400, DoveIcon
17. service: green-600/20, text-green-400, UsersIcon
18. holiness: amber-600/20, text-amber-400, StarIcon
19. redemption: orange-600/20, text-orange-400, ArrowPathIcon
20. eternity: cyan-600/20, text-cyan-400, ClockIcon
21. teaching: violet-600/20, text-violet-400, BookOpenIcon
22. accountability: rose-600/20, text-rose-400, UserGroupIcon

## Project Documentation
- `project_structure.txt` (in `BibleStudyApp/`): Provides a detailed overview of the project's architecture, technologies, and features.
- `Grok_summary.txt` (in `BibleStudyApp/`): Summarizes the project's purpose, structure, and goals for starting new conversations with Grok.
- `improvements.md` (in `docs/`): Tracks planned enhancements with priorities and implementation notes.
- Supabase client unified in `lib/supabaseClient.ts` with `persistSession: true` for consistent session handling.
- Run locally with `next dev --experimental-https` to ensure session cookies are sent correctly.
- Reading Page uses a Server Component for session checks, with interactive features in a Client Component for optimal performance and reliability.
- Added server-side debug logs in `app/reading/page.tsx` to track session and cookie state for troubleshooting.
- Used `router.push` instead of `window.location.href` in `app/page.tsx` for better cookie context preservation.

## NavigationHeader (`components/NavigationHeader.tsx`)
- **Purpose:** Provide consistent navigation across all pages.
- **Features:**
  - Consistent rendering of the icon and "Bible Study App" title with responsive styling
  - Icon scales on hover (hover:scale-105) for a subtle interactive effect
  - Context-aware display of navigation links based on authentication status and current page
  - Responsive design for both mobile and desktop viewports
  - Fixed position with semi-transparent background and backdrop blur
  - On Profile Page, shows "Back to Reading" link instead of the "Profile" button
  - Consistent button styling across all pages that matches the app's design system
  - Adjusted logo and title size for mobile to ensure all header elements are visible
  - Optimized for small screens with reduced padding and spacing between elements
  - Removed navigation behavior from logo and title, making them static elements
- **Props:**
  - currentPage (string): Indicates the current page to determine which navigation items to display
  - isAuthenticated (boolean): Controls authentication-dependent UI elements
  - setIsSignupModalOpen and setMode: For handling signup/signin modal on the home page